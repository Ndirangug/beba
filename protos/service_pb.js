/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.beba_backend.DisburseFundsRequest', null, global);
goog.exportSymbol('proto.beba_backend.DisburseFundsResponse', null, global);
goog.exportSymbol('proto.beba_backend.Driver', null, global);
goog.exportSymbol('proto.beba_backend.DriverRequest', null, global);
goog.exportSymbol('proto.beba_backend.EmptyMessage', null, global);
goog.exportSymbol('proto.beba_backend.Location', null, global);
goog.exportSymbol('proto.beba_backend.RecordId', null, global);
goog.exportSymbol('proto.beba_backend.SendMessageResponse', null, global);
goog.exportSymbol('proto.beba_backend.TestHelloRequest', null, global);
goog.exportSymbol('proto.beba_backend.TestHelloResponse', null, global);
goog.exportSymbol('proto.beba_backend.TextMessage', null, global);
goog.exportSymbol('proto.beba_backend.Trip', null, global);
goog.exportSymbol('proto.beba_backend.TripsRequest', null, global);
goog.exportSymbol('proto.beba_backend.Vehicle', null, global);
goog.exportSymbol('proto.beba_backend.VehicleKilometresTravelledResponse', null, global);
goog.exportSymbol('proto.beba_backend.VehicleRequest', null, global);
goog.exportSymbol('proto.beba_backend.WriteRecordResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.TestHelloRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TestHelloRequest.displayName =
    'proto.beba_backend.TestHelloRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.TestHelloRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.TestHelloRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.TestHelloRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.TestHelloRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.TestHelloRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.TestHelloRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TestHelloRequest.displayName = 'proto.beba_backend.TestHelloRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.TestHelloRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.TestHelloRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.TestHelloRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.TestHelloRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.TestHelloRequest}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.TestHelloRequest()
  return proto.beba_backend.TestHelloRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.TestHelloRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.TestHelloRequest;
  return proto.beba_backend.TestHelloRequest.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.TestHelloRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.TestHelloRequest}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setName(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.TestHelloRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.TestHelloRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.TestHelloRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.TestHelloRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.TestHelloRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getName()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
}
=======
proto.beba_backend.TestHelloRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional string name = 1;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/** @param {string} value */
proto.beba_backend.TestHelloRequest.prototype.setName = function (value) {
  jspb.Message.setProto3StringField(this, 1, value)
}
=======
proto.beba_backend.TestHelloRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.beba_backend.TestHelloRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.TestHelloResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TestHelloResponse.displayName =
    'proto.beba_backend.TestHelloResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.TestHelloResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.TestHelloResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.TestHelloResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.TestHelloResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        response: jspb.Message.getFieldWithDefault(msg, 1, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.TestHelloResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.TestHelloResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TestHelloResponse.displayName = 'proto.beba_backend.TestHelloResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.TestHelloResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.TestHelloResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.TestHelloResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.TestHelloResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.TestHelloResponse}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.TestHelloResponse()
  return proto.beba_backend.TestHelloResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.TestHelloResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.TestHelloResponse;
  return proto.beba_backend.TestHelloResponse.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.TestHelloResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.TestHelloResponse}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setResponse(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.TestHelloResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.TestHelloResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.TestHelloResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.TestHelloResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.TestHelloResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getResponse()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
}
=======
proto.beba_backend.TestHelloResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional string response = 1;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TestHelloResponse.prototype.getResponse = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/** @param {string} value */
proto.beba_backend.TestHelloResponse.prototype.setResponse = function (value) {
  jspb.Message.setProto3StringField(this, 1, value)
}
=======
proto.beba_backend.TestHelloResponse.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.beba_backend.TestHelloResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.EmptyMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.EmptyMessage, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.EmptyMessage.displayName =
    'proto.beba_backend.EmptyMessage'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.EmptyMessage.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.EmptyMessage.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.EmptyMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.EmptyMessage.toObject = function (includeInstance, msg) {
  let f; var obj = {

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    
    return obj
  }
}

=======
proto.beba_backend.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.EmptyMessage.displayName = 'proto.beba_backend.EmptyMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.EmptyMessage}
 */
<<<<<<< HEAD
proto.beba_backend.EmptyMessage.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.EmptyMessage()
  return proto.beba_backend.EmptyMessage.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.EmptyMessage;
  return proto.beba_backend.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.EmptyMessage}
 */
<<<<<<< HEAD
proto.beba_backend.EmptyMessage.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.EmptyMessage.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.EmptyMessage.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.EmptyMessage.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
}
=======
proto.beba_backend.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.Driver = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.Driver, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Driver.displayName = 'proto.beba_backend.Driver'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.Driver.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.Driver.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.Driver} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.Driver.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        idnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
        firstname: jspb.Message.getFieldWithDefault(msg, 6, ''),
        lastname: jspb.Message.getFieldWithDefault(msg, 7, ''),
        email: jspb.Message.getFieldWithDefault(msg, 8, ''),
        phone: jspb.Message.getFieldWithDefault(msg, 9, ''),
        sex: jspb.Message.getFieldWithDefault(msg, 10, ''),
        dateofbirth:
          (f = msg.getDateofbirth()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        dateemployed:
          (f = msg.getDateemployed()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        comment: jspb.Message.getFieldWithDefault(msg, 13, ''),
        evaluationreport: jspb.Message.getFieldWithDefault(msg, 14, ''),
        driverslicence: jspb.Message.getFieldWithDefault(msg, 15, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.Driver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.Driver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Driver.displayName = 'proto.beba_backend.Driver';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.Driver.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.Driver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.Driver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.Driver.toObject = function(includeInstance, msg) {
  var f, obj = {
    idnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 10, ""),
    dateofbirth: (f = msg.getDateofbirth()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dateemployed: (f = msg.getDateemployed()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    comment: jspb.Message.getFieldWithDefault(msg, 13, ""),
    evaluationreport: jspb.Message.getFieldWithDefault(msg, 14, ""),
    driverslicence: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.Driver}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.Driver()
  return proto.beba_backend.Driver.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.Driver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.Driver;
  return proto.beba_backend.Driver.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.Driver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.Driver}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 5:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setIdnumber(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setFirstname(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setLastname(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setEmail(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setPhone(value)
        break
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setSex(value)
        break
      case 11:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setDateofbirth(value)
        break
      case 12:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setDateemployed(value)
        break
      case 13:
        var value = /** @type {string} */ (reader.readString())
        msg.setComment(value)
        break
      case 14:
        var value = /** @type {string} */ (reader.readString())
        msg.setEvaluationreport(value)
        break
      case 15:
        var value = /** @type {string} */ (reader.readString())
        msg.setDriverslicence(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.Driver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIdnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSex(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateofbirth(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateemployed(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluationreport(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverslicence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.Driver.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.Driver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.Driver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.Driver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.Driver.serializeBinaryToWriter = function (message, writer) {
  let f = undefined
  f = message.getIdnumber()
  if (f !== 0) {
    writer.writeUint32(5, f)
  }
  f = message.getFirstname()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getLastname()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getEmail()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getPhone()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
  f = message.getSex()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = message.getDateofbirth()
=======
proto.beba_backend.Driver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdnumber();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSex();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDateofbirth();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getDateemployed()
=======
    );
  }
  f = message.getDateemployed();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getComment()
  if (f.length > 0) {
    writer.writeString(13, f)
  }
  f = message.getEvaluationreport()
  if (f.length > 0) {
    writer.writeString(14, f)
  }
  f = message.getDriverslicence()
  if (f.length > 0) {
    writer.writeString(15, f)
  }
}
=======
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEvaluationreport();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getDriverslicence();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 idNumber = 5;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getIdnumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0))
}

/** @param {number} value */
proto.beba_backend.Driver.prototype.setIdnumber = function (value) {
  jspb.Message.setProto3IntField(this, 5, value)
}
=======
proto.beba_backend.Driver.prototype.getIdnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.beba_backend.Driver.prototype.setIdnumber = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};

>>>>>>> triage2

/**
 * optional string firstName = 6;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getFirstname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setFirstname = function (value) {
  jspb.Message.setProto3StringField(this, 6, value)
}
=======
proto.beba_backend.Driver.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setFirstname = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};

>>>>>>> triage2

/**
 * optional string lastName = 7;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getLastname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setLastname = function (value) {
  jspb.Message.setProto3StringField(this, 7, value)
}
=======
proto.beba_backend.Driver.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setLastname = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};

>>>>>>> triage2

/**
 * optional string email = 8;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setEmail = function (value) {
  jspb.Message.setProto3StringField(this, 8, value)
}
=======
proto.beba_backend.Driver.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};

>>>>>>> triage2

/**
 * optional string phone = 9;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getPhone = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setPhone = function (value) {
  jspb.Message.setProto3StringField(this, 9, value)
}
=======
proto.beba_backend.Driver.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};

>>>>>>> triage2

/**
 * optional string sex = 10;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getSex = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setSex = function (value) {
  jspb.Message.setProto3StringField(this, 10, value)
}
=======
proto.beba_backend.Driver.prototype.getSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setSex = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp dateOfBirth = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getDateofbirth = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    11
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Driver.prototype.setDateofbirth = function (value) {
  jspb.Message.setWrapperField(this, 11, value)
}

proto.beba_backend.Driver.prototype.clearDateofbirth = function () {
  this.setDateofbirth(undefined)
}
=======
proto.beba_backend.Driver.prototype.getDateofbirth = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Driver.prototype.setDateofbirth = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.beba_backend.Driver.prototype.clearDateofbirth = function() {
  this.setDateofbirth(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.hasDateofbirth = function () {
  return jspb.Message.getField(this, 11) != null
}
=======
proto.beba_backend.Driver.prototype.hasDateofbirth = function() {
  return jspb.Message.getField(this, 11) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp dateEmployed = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getDateemployed = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    12
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Driver.prototype.setDateemployed = function (value) {
  jspb.Message.setWrapperField(this, 12, value)
}

proto.beba_backend.Driver.prototype.clearDateemployed = function () {
  this.setDateemployed(undefined)
}
=======
proto.beba_backend.Driver.prototype.getDateemployed = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Driver.prototype.setDateemployed = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.beba_backend.Driver.prototype.clearDateemployed = function() {
  this.setDateemployed(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.hasDateemployed = function () {
  return jspb.Message.getField(this, 12) != null
}
=======
proto.beba_backend.Driver.prototype.hasDateemployed = function() {
  return jspb.Message.getField(this, 12) != null;
};

>>>>>>> triage2

/**
 * optional string comment = 13;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getComment = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setComment = function (value) {
  jspb.Message.setProto3StringField(this, 13, value)
}
=======
proto.beba_backend.Driver.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setComment = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};

>>>>>>> triage2

/**
 * optional string evaluationReport = 14;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getEvaluationreport = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setEvaluationreport = function (value) {
  jspb.Message.setProto3StringField(this, 14, value)
}
=======
proto.beba_backend.Driver.prototype.getEvaluationreport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setEvaluationreport = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};

>>>>>>> triage2

/**
 * optional string driversLicence = 15;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Driver.prototype.getDriverslicence = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''))
}

/** @param {string} value */
proto.beba_backend.Driver.prototype.setDriverslicence = function (value) {
  jspb.Message.setProto3StringField(this, 15, value)
}
=======
proto.beba_backend.Driver.prototype.getDriverslicence = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.beba_backend.Driver.prototype.setDriverslicence = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.DriverRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DriverRequest.displayName =
    'proto.beba_backend.DriverRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.DriverRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.DriverRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.DriverRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.DriverRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        idnumber: jspb.Message.getFieldWithDefault(msg, 10, 0),
        searchquery: jspb.Message.getFieldWithDefault(msg, 11, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.DriverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.DriverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DriverRequest.displayName = 'proto.beba_backend.DriverRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.DriverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.DriverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.DriverRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.DriverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idnumber: jspb.Message.getFieldWithDefault(msg, 10, 0),
    searchquery: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.DriverRequest}
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.DriverRequest()
  return proto.beba_backend.DriverRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.DriverRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.DriverRequest;
  return proto.beba_backend.DriverRequest.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.DriverRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.DriverRequest}
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setIdnumber(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setSearchquery(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.DriverRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIdnumber(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchquery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.DriverRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.DriverRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.DriverRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.DriverRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getIdnumber()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
  f = message.getSearchquery()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
}
=======
proto.beba_backend.DriverRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdnumber();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSearchquery();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 idNumber = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.prototype.getIdnumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.DriverRequest.prototype.setIdnumber = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.DriverRequest.prototype.getIdnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.DriverRequest.prototype.setIdnumber = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional string searchQuery = 11;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.DriverRequest.prototype.getSearchquery = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/** @param {string} value */
proto.beba_backend.DriverRequest.prototype.setSearchquery = function (value) {
  jspb.Message.setProto3StringField(this, 11, value)
}
=======
proto.beba_backend.DriverRequest.prototype.getSearchquery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.beba_backend.DriverRequest.prototype.setSearchquery = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.Vehicle, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Vehicle.displayName = 'proto.beba_backend.Vehicle'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.Vehicle.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.Vehicle.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.Vehicle} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.Vehicle.toObject = function (includeInstance, msg) {
  let f; var obj = {
        vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
        brand: jspb.Message.getFieldWithDefault(msg, 11, ''),
        model: jspb.Message.getFieldWithDefault(msg, 12, ''),
        modelyear: jspb.Message.getFieldWithDefault(msg, 13, ''),
        registrationnumber: jspb.Message.getFieldWithDefault(msg, 14, ''),
        fuelconsumption: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
        color: jspb.Message.getFieldWithDefault(msg, 16, ''),
        datepurchased:
          (f = msg.getDatepurchased()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        expectedendservice:
          (f = msg.getExpectedendservice()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        type: jspb.Message.getFieldWithDefault(msg, 19, ''),
        condition: jspb.Message.getFieldWithDefault(msg, 20, ''),
        maxweight: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.Vehicle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.Vehicle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Vehicle.displayName = 'proto.beba_backend.Vehicle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.Vehicle.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.Vehicle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.Vehicle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.Vehicle.toObject = function(includeInstance, msg) {
  var f, obj = {
    vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    brand: jspb.Message.getFieldWithDefault(msg, 11, ""),
    model: jspb.Message.getFieldWithDefault(msg, 12, ""),
    modelyear: jspb.Message.getFieldWithDefault(msg, 13, ""),
    registrationnumber: jspb.Message.getFieldWithDefault(msg, 14, ""),
    fuelconsumption: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    color: jspb.Message.getFieldWithDefault(msg, 16, ""),
    datepurchased: (f = msg.getDatepurchased()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expectedendservice: (f = msg.getExpectedendservice()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 19, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 20, ""),
    maxweight: +jspb.Message.getFieldWithDefault(msg, 21, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.Vehicle}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.Vehicle()
  return proto.beba_backend.Vehicle.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.Vehicle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.Vehicle;
  return proto.beba_backend.Vehicle.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.Vehicle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.Vehicle}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setVehicleid(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setBrand(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setModel(value)
        break
      case 13:
        var value = /** @type {string} */ (reader.readString())
        msg.setModelyear(value)
        break
      case 14:
        var value = /** @type {string} */ (reader.readString())
        msg.setRegistrationnumber(value)
        break
      case 15:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setFuelconsumption(value)
        break
      case 16:
        var value = /** @type {string} */ (reader.readString())
        msg.setColor(value)
        break
      case 17:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setDatepurchased(value)
        break
      case 18:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setExpectedendservice(value)
        break
      case 19:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 20:
        var value = /** @type {string} */ (reader.readString())
        msg.setCondition(value)
        break
      case 21:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setMaxweight(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.Vehicle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVehicleid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelyear(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationnumber(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelconsumption(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatepurchased(value);
      break;
    case 18:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpectedendservice(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxweight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.Vehicle.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.Vehicle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.Vehicle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.Vehicle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getVehicleid()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
  f = message.getBrand()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
  f = message.getModel()
  if (f.length > 0) {
    writer.writeString(12, f)
  }
  f = message.getModelyear()
  if (f.length > 0) {
    writer.writeString(13, f)
  }
  f = message.getRegistrationnumber()
  if (f.length > 0) {
    writer.writeString(14, f)
  }
  f = message.getFuelconsumption()
  if (f !== 0.0) {
    writer.writeFloat(15, f)
  }
  f = message.getColor()
  if (f.length > 0) {
    writer.writeString(16, f)
  }
  f = message.getDatepurchased()
=======
proto.beba_backend.Vehicle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVehicleid();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getModelyear();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRegistrationnumber();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getFuelconsumption();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDatepurchased();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getExpectedendservice()
=======
    );
  }
  f = message.getExpectedendservice();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(19, f)
  }
  f = message.getCondition()
  if (f.length > 0) {
    writer.writeString(20, f)
  }
  f = message.getMaxweight()
  if (f !== 0.0) {
    writer.writeFloat(21, f)
  }
}
=======
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMaxweight();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 vehicleId = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getVehicleid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setVehicleid = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.Vehicle.prototype.getVehicleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setVehicleid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional string brand = 11;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getBrand = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setBrand = function (value) {
  jspb.Message.setProto3StringField(this, 11, value)
}
=======
proto.beba_backend.Vehicle.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setBrand = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};

>>>>>>> triage2

/**
 * optional string model = 12;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getModel = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setModel = function (value) {
  jspb.Message.setProto3StringField(this, 12, value)
}
=======
proto.beba_backend.Vehicle.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setModel = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};

>>>>>>> triage2

/**
 * optional string modelYear = 13;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getModelyear = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setModelyear = function (value) {
  jspb.Message.setProto3StringField(this, 13, value)
}
=======
proto.beba_backend.Vehicle.prototype.getModelyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setModelyear = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};

>>>>>>> triage2

/**
 * optional string registrationNumber = 14;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getRegistrationnumber = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setRegistrationnumber = function (value) {
  jspb.Message.setProto3StringField(this, 14, value)
}
=======
proto.beba_backend.Vehicle.prototype.getRegistrationnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setRegistrationnumber = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};

>>>>>>> triage2

/**
 * optional float fuelConsumption = 15;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getFuelconsumption = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(
    this,
    15,
    0.0
  ))
}

/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setFuelconsumption = function (value) {
  jspb.Message.setProto3FloatField(this, 15, value)
}
=======
proto.beba_backend.Vehicle.prototype.getFuelconsumption = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setFuelconsumption = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};

>>>>>>> triage2

/**
 * optional string color = 16;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getColor = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setColor = function (value) {
  jspb.Message.setProto3StringField(this, 16, value)
}
=======
proto.beba_backend.Vehicle.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setColor = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp datePurchased = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getDatepurchased = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    17
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Vehicle.prototype.setDatepurchased = function (value) {
  jspb.Message.setWrapperField(this, 17, value)
}

proto.beba_backend.Vehicle.prototype.clearDatepurchased = function () {
  this.setDatepurchased(undefined)
}
=======
proto.beba_backend.Vehicle.prototype.getDatepurchased = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Vehicle.prototype.setDatepurchased = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.beba_backend.Vehicle.prototype.clearDatepurchased = function() {
  this.setDatepurchased(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.hasDatepurchased = function () {
  return jspb.Message.getField(this, 17) != null
}
=======
proto.beba_backend.Vehicle.prototype.hasDatepurchased = function() {
  return jspb.Message.getField(this, 17) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp expectedEndService = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getExpectedendservice = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    18
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Vehicle.prototype.setExpectedendservice = function (value) {
  jspb.Message.setWrapperField(this, 18, value)
}

proto.beba_backend.Vehicle.prototype.clearExpectedendservice = function () {
  this.setExpectedendservice(undefined)
}
=======
proto.beba_backend.Vehicle.prototype.getExpectedendservice = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Vehicle.prototype.setExpectedendservice = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.beba_backend.Vehicle.prototype.clearExpectedendservice = function() {
  this.setExpectedendservice(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.hasExpectedendservice = function () {
  return jspb.Message.getField(this, 18) != null
}
=======
proto.beba_backend.Vehicle.prototype.hasExpectedendservice = function() {
  return jspb.Message.getField(this, 18) != null;
};

>>>>>>> triage2

/**
 * optional string type = 19;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setType = function (value) {
  jspb.Message.setProto3StringField(this, 19, value)
}
=======
proto.beba_backend.Vehicle.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};

>>>>>>> triage2

/**
 * optional string condition = 20;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getCondition = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ''))
}

/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setCondition = function (value) {
  jspb.Message.setProto3StringField(this, 20, value)
}
=======
proto.beba_backend.Vehicle.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.beba_backend.Vehicle.prototype.setCondition = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};

>>>>>>> triage2

/**
 * optional float maxWeight = 21;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Vehicle.prototype.getMaxweight = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(
    this,
    21,
    0.0
  ))
}

/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setMaxweight = function (value) {
  jspb.Message.setProto3FloatField(this, 21, value)
}
=======
proto.beba_backend.Vehicle.prototype.getMaxweight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.beba_backend.Vehicle.prototype.setMaxweight = function(value) {
  jspb.Message.setProto3FloatField(this, 21, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.VehicleRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.VehicleRequest.displayName =
    'proto.beba_backend.VehicleRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.VehicleRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.VehicleRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.VehicleRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.VehicleRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
        searchquery: jspb.Message.getFieldWithDefault(msg, 11, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.VehicleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.VehicleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.VehicleRequest.displayName = 'proto.beba_backend.VehicleRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.VehicleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.VehicleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.VehicleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.VehicleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    searchquery: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.VehicleRequest}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.VehicleRequest()
  return proto.beba_backend.VehicleRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.VehicleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.VehicleRequest;
  return proto.beba_backend.VehicleRequest.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.VehicleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.VehicleRequest}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setVehicleid(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setSearchquery(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.VehicleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVehicleid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchquery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.VehicleRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.VehicleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.VehicleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.VehicleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getVehicleid()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
  f = message.getSearchquery()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
}
=======
proto.beba_backend.VehicleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVehicleid();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSearchquery();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 vehicleID = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.prototype.getVehicleid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.VehicleRequest.prototype.setVehicleid = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.VehicleRequest.prototype.getVehicleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.VehicleRequest.prototype.setVehicleid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional string searchQuery = 11;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleRequest.prototype.getSearchquery = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/** @param {string} value */
proto.beba_backend.VehicleRequest.prototype.setSearchquery = function (value) {
  jspb.Message.setProto3StringField(this, 11, value)
}
=======
proto.beba_backend.VehicleRequest.prototype.getSearchquery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.beba_backend.VehicleRequest.prototype.setSearchquery = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.beba_backend.VehicleKilometresTravelledResponse,
  jspb.Message
)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.VehicleKilometresTravelledResponse.displayName =
    'proto.beba_backend.VehicleKilometresTravelledResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.VehicleKilometresTravelledResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.VehicleKilometresTravelledResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.VehicleKilometresTravelledResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.VehicleKilometresTravelledResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        date: jspb.Message.getFieldWithDefault(msg, 10, ''),
        kilometres: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.VehicleKilometresTravelledResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.VehicleKilometresTravelledResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.VehicleKilometresTravelledResponse.displayName = 'proto.beba_backend.VehicleKilometresTravelledResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.VehicleKilometresTravelledResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.VehicleKilometresTravelledResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.VehicleKilometresTravelledResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 10, ""),
    kilometres: +jspb.Message.getFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.VehicleKilometresTravelledResponse}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinary = function (
  bytes
) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.VehicleKilometresTravelledResponse()
  return proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.VehicleKilometresTravelledResponse;
  return proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.VehicleKilometresTravelledResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.VehicleKilometresTravelledResponse}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setDate(value)
        break
      case 11:
        var value = /** @type {number} */ (reader.readDouble())
        msg.setKilometres(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setKilometres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.VehicleKilometresTravelledResponse.serializeBinaryToWriter(
    this,
    writer
  )
  return writer.getResultBuffer()
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.VehicleKilometresTravelledResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.VehicleKilometresTravelledResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getDate()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = message.getKilometres()
  if (f !== 0.0) {
    writer.writeDouble(11, f)
  }
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getKilometres();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional string date = 10;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.getDate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/** @param {string} value */
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.setDate = function (
  value
) {
  jspb.Message.setProto3StringField(this, 10, value)
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.setDate = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional double kilometres = 11;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.getKilometres = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(
    this,
    11,
    0.0
  ))
}

/** @param {number} value */
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.setKilometres = function (
  value
) {
  jspb.Message.setProto3FloatField(this, 11, value)
}
=======
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.getKilometres = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.beba_backend.VehicleKilometresTravelledResponse.prototype.setKilometres = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.Trip = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.Trip, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Trip.displayName = 'proto.beba_backend.Trip'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.Trip.prototype.toObject = function (opt_includeInstance) {
    return proto.beba_backend.Trip.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.Trip} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.Trip.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        tripid: jspb.Message.getFieldWithDefault(msg, 10, 0),
        driver:
          (f = msg.getDriver()) &&
          proto.beba_backend.Driver.toObject(includeInstance, f),
        vehicle:
          (f = msg.getVehicle()) &&
          proto.beba_backend.Vehicle.toObject(includeInstance, f),
        scheduleddeparturetime:
          (f = msg.getScheduleddeparturetime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        actualdeparturetime:
          (f = msg.getActualdeparturetime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        scheduledarrivaltime:
          (f = msg.getScheduledarrivaltime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        actualarrivaltime:
          (f = msg.getActualarrivaltime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        origin:
          (f = msg.getOrigin()) &&
          proto.beba_backend.Location.toObject(includeInstance, f),
        destination:
          (f = msg.getDestination()) &&
          proto.beba_backend.Location.toObject(includeInstance, f),
        status: jspb.Message.getFieldWithDefault(msg, 19, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.Trip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.Trip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Trip.displayName = 'proto.beba_backend.Trip';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.Trip.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.Trip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.Trip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.Trip.toObject = function(includeInstance, msg) {
  var f, obj = {
    tripid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    driver: (f = msg.getDriver()) && proto.beba_backend.Driver.toObject(includeInstance, f),
    vehicle: (f = msg.getVehicle()) && proto.beba_backend.Vehicle.toObject(includeInstance, f),
    scheduleddeparturetime: (f = msg.getScheduleddeparturetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    actualdeparturetime: (f = msg.getActualdeparturetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    scheduledarrivaltime: (f = msg.getScheduledarrivaltime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    actualarrivaltime: (f = msg.getActualarrivaltime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    origin: (f = msg.getOrigin()) && proto.beba_backend.Location.toObject(includeInstance, f),
    destination: (f = msg.getDestination()) && proto.beba_backend.Location.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.Trip}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.Trip()
  return proto.beba_backend.Trip.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.Trip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.Trip;
  return proto.beba_backend.Trip.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.Trip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.Trip}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setTripid(value)
        break
      case 11:
        var value = new proto.beba_backend.Driver()
        reader.readMessage(
          value,
          proto.beba_backend.Driver.deserializeBinaryFromReader
        )
        msg.setDriver(value)
        break
      case 12:
        var value = new proto.beba_backend.Vehicle()
        reader.readMessage(
          value,
          proto.beba_backend.Vehicle.deserializeBinaryFromReader
        )
        msg.setVehicle(value)
        break
      case 13:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setScheduleddeparturetime(value)
        break
      case 14:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setActualdeparturetime(value)
        break
      case 15:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setScheduledarrivaltime(value)
        break
      case 16:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setActualarrivaltime(value)
        break
      case 17:
        var value = new proto.beba_backend.Location()
        reader.readMessage(
          value,
          proto.beba_backend.Location.deserializeBinaryFromReader
        )
        msg.setOrigin(value)
        break
      case 18:
        var value = new proto.beba_backend.Location()
        reader.readMessage(
          value,
          proto.beba_backend.Location.deserializeBinaryFromReader
        )
        msg.setDestination(value)
        break
      case 19:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.Trip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTripid(value);
      break;
    case 11:
      var value = new proto.beba_backend.Driver;
      reader.readMessage(value,proto.beba_backend.Driver.deserializeBinaryFromReader);
      msg.setDriver(value);
      break;
    case 12:
      var value = new proto.beba_backend.Vehicle;
      reader.readMessage(value,proto.beba_backend.Vehicle.deserializeBinaryFromReader);
      msg.setVehicle(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduleddeparturetime(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setActualdeparturetime(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduledarrivaltime(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setActualarrivaltime(value);
      break;
    case 17:
      var value = new proto.beba_backend.Location;
      reader.readMessage(value,proto.beba_backend.Location.deserializeBinaryFromReader);
      msg.setOrigin(value);
      break;
    case 18:
      var value = new proto.beba_backend.Location;
      reader.readMessage(value,proto.beba_backend.Location.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.Trip.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.Trip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.Trip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.Trip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.Trip.serializeBinaryToWriter = function (message, writer) {
  let f = undefined
  f = message.getTripid()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
  f = message.getDriver()
=======
proto.beba_backend.Trip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTripid();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getDriver();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.beba_backend.Driver.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getVehicle()
=======
    );
  }
  f = message.getVehicle();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.beba_backend.Vehicle.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getScheduleddeparturetime()
=======
    );
  }
  f = message.getScheduleddeparturetime();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getActualdeparturetime()
=======
    );
  }
  f = message.getActualdeparturetime();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getScheduledarrivaltime()
=======
    );
  }
  f = message.getScheduledarrivaltime();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getActualarrivaltime()
=======
    );
  }
  f = message.getActualarrivaltime();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getOrigin()
=======
    );
  }
  f = message.getOrigin();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.beba_backend.Location.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getDestination()
=======
    );
  }
  f = message.getDestination();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.beba_backend.Location.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(19, f)
  }
}
=======
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 tripId = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getTripid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.Trip.prototype.setTripid = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.Trip.prototype.getTripid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.Trip.prototype.setTripid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional Driver driver = 11;
 * @return {?proto.beba_backend.Driver}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getDriver = function () {
  return /** @type{?proto.beba_backend.Driver} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Driver,
    11
  ))
}

/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.Trip.prototype.setDriver = function (value) {
  jspb.Message.setWrapperField(this, 11, value)
}

proto.beba_backend.Trip.prototype.clearDriver = function () {
  this.setDriver(undefined)
}
=======
proto.beba_backend.Trip.prototype.getDriver = function() {
  return /** @type{?proto.beba_backend.Driver} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Driver, 11));
};


/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.Trip.prototype.setDriver = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.beba_backend.Trip.prototype.clearDriver = function() {
  this.setDriver(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasDriver = function () {
  return jspb.Message.getField(this, 11) != null
}
=======
proto.beba_backend.Trip.prototype.hasDriver = function() {
  return jspb.Message.getField(this, 11) != null;
};

>>>>>>> triage2

/**
 * optional Vehicle vehicle = 12;
 * @return {?proto.beba_backend.Vehicle}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getVehicle = function () {
  return /** @type{?proto.beba_backend.Vehicle} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Vehicle,
    12
  ))
}

/** @param {?proto.beba_backend.Vehicle|undefined} value */
proto.beba_backend.Trip.prototype.setVehicle = function (value) {
  jspb.Message.setWrapperField(this, 12, value)
}

proto.beba_backend.Trip.prototype.clearVehicle = function () {
  this.setVehicle(undefined)
}
=======
proto.beba_backend.Trip.prototype.getVehicle = function() {
  return /** @type{?proto.beba_backend.Vehicle} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Vehicle, 12));
};


/** @param {?proto.beba_backend.Vehicle|undefined} value */
proto.beba_backend.Trip.prototype.setVehicle = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.beba_backend.Trip.prototype.clearVehicle = function() {
  this.setVehicle(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasVehicle = function () {
  return jspb.Message.getField(this, 12) != null
}
=======
proto.beba_backend.Trip.prototype.hasVehicle = function() {
  return jspb.Message.getField(this, 12) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp scheduledDepartureTime = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getScheduleddeparturetime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    13
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setScheduleddeparturetime = function (value) {
  jspb.Message.setWrapperField(this, 13, value)
}

proto.beba_backend.Trip.prototype.clearScheduleddeparturetime = function () {
  this.setScheduleddeparturetime(undefined)
}
=======
proto.beba_backend.Trip.prototype.getScheduleddeparturetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setScheduleddeparturetime = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.beba_backend.Trip.prototype.clearScheduleddeparturetime = function() {
  this.setScheduleddeparturetime(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasScheduleddeparturetime = function () {
  return jspb.Message.getField(this, 13) != null
}
=======
proto.beba_backend.Trip.prototype.hasScheduleddeparturetime = function() {
  return jspb.Message.getField(this, 13) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp actualDepartureTime = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getActualdeparturetime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    14
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setActualdeparturetime = function (value) {
  jspb.Message.setWrapperField(this, 14, value)
}

proto.beba_backend.Trip.prototype.clearActualdeparturetime = function () {
  this.setActualdeparturetime(undefined)
}
=======
proto.beba_backend.Trip.prototype.getActualdeparturetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setActualdeparturetime = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.beba_backend.Trip.prototype.clearActualdeparturetime = function() {
  this.setActualdeparturetime(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasActualdeparturetime = function () {
  return jspb.Message.getField(this, 14) != null
}
=======
proto.beba_backend.Trip.prototype.hasActualdeparturetime = function() {
  return jspb.Message.getField(this, 14) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp scheduledArrivalTime = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getScheduledarrivaltime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    15
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setScheduledarrivaltime = function (value) {
  jspb.Message.setWrapperField(this, 15, value)
}

proto.beba_backend.Trip.prototype.clearScheduledarrivaltime = function () {
  this.setScheduledarrivaltime(undefined)
}
=======
proto.beba_backend.Trip.prototype.getScheduledarrivaltime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setScheduledarrivaltime = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.beba_backend.Trip.prototype.clearScheduledarrivaltime = function() {
  this.setScheduledarrivaltime(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasScheduledarrivaltime = function () {
  return jspb.Message.getField(this, 15) != null
}
=======
proto.beba_backend.Trip.prototype.hasScheduledarrivaltime = function() {
  return jspb.Message.getField(this, 15) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp actualArrivalTime = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getActualarrivaltime = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    16
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setActualarrivaltime = function (value) {
  jspb.Message.setWrapperField(this, 16, value)
}

proto.beba_backend.Trip.prototype.clearActualarrivaltime = function () {
  this.setActualarrivaltime(undefined)
}
=======
proto.beba_backend.Trip.prototype.getActualarrivaltime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.Trip.prototype.setActualarrivaltime = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.beba_backend.Trip.prototype.clearActualarrivaltime = function() {
  this.setActualarrivaltime(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasActualarrivaltime = function () {
  return jspb.Message.getField(this, 16) != null
}
=======
proto.beba_backend.Trip.prototype.hasActualarrivaltime = function() {
  return jspb.Message.getField(this, 16) != null;
};

>>>>>>> triage2

/**
 * optional Location origin = 17;
 * @return {?proto.beba_backend.Location}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getOrigin = function () {
  return /** @type{?proto.beba_backend.Location} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Location,
    17
  ))
}

/** @param {?proto.beba_backend.Location|undefined} value */
proto.beba_backend.Trip.prototype.setOrigin = function (value) {
  jspb.Message.setWrapperField(this, 17, value)
}

proto.beba_backend.Trip.prototype.clearOrigin = function () {
  this.setOrigin(undefined)
}
=======
proto.beba_backend.Trip.prototype.getOrigin = function() {
  return /** @type{?proto.beba_backend.Location} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Location, 17));
};


/** @param {?proto.beba_backend.Location|undefined} value */
proto.beba_backend.Trip.prototype.setOrigin = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.beba_backend.Trip.prototype.clearOrigin = function() {
  this.setOrigin(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasOrigin = function () {
  return jspb.Message.getField(this, 17) != null
}
=======
proto.beba_backend.Trip.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 17) != null;
};

>>>>>>> triage2

/**
 * optional Location destination = 18;
 * @return {?proto.beba_backend.Location}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getDestination = function () {
  return /** @type{?proto.beba_backend.Location} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Location,
    18
  ))
}

/** @param {?proto.beba_backend.Location|undefined} value */
proto.beba_backend.Trip.prototype.setDestination = function (value) {
  jspb.Message.setWrapperField(this, 18, value)
}

proto.beba_backend.Trip.prototype.clearDestination = function () {
  this.setDestination(undefined)
}
=======
proto.beba_backend.Trip.prototype.getDestination = function() {
  return /** @type{?proto.beba_backend.Location} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Location, 18));
};


/** @param {?proto.beba_backend.Location|undefined} value */
proto.beba_backend.Trip.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.beba_backend.Trip.prototype.clearDestination = function() {
  this.setDestination(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.hasDestination = function () {
  return jspb.Message.getField(this, 18) != null
}
=======
proto.beba_backend.Trip.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 18) != null;
};

>>>>>>> triage2

/**
 * optional string status = 19;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.Trip.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ''))
}

/** @param {string} value */
proto.beba_backend.Trip.prototype.setStatus = function (value) {
  jspb.Message.setProto3StringField(this, 19, value)
}
=======
proto.beba_backend.Trip.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.beba_backend.Trip.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.TripsRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TripsRequest.displayName =
    'proto.beba_backend.TripsRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.TripsRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.TripsRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.TripsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.TripsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
        driverid: jspb.Message.getFieldWithDefault(msg, 11, 0),
        startdate:
          (f = msg.getStartdate()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        enddate:
          (f = msg.getEnddate()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        status: jspb.Message.getFieldWithDefault(msg, 14, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.TripsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.TripsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TripsRequest.displayName = 'proto.beba_backend.TripsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.TripsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.TripsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.TripsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.TripsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vehicleid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    driverid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    startdate: (f = msg.getStartdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    enddate: (f = msg.getEnddate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.TripsRequest}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.TripsRequest()
  return proto.beba_backend.TripsRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.TripsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.TripsRequest;
  return proto.beba_backend.TripsRequest.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.TripsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.TripsRequest}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setVehicleid(value)
        break
      case 11:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setDriverid(value)
        break
      case 12:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setStartdate(value)
        break
      case 13:
        var value = new google_protobuf_timestamp_pb.Timestamp()
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        )
        msg.setEnddate(value)
        break
      case 14:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.TripsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVehicleid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDriverid(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartdate(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnddate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.TripsRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.TripsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.TripsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.TripsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getVehicleid()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
  f = message.getDriverid()
  if (f !== 0) {
    writer.writeUint32(11, f)
  }
  f = message.getStartdate()
=======
proto.beba_backend.TripsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVehicleid();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getDriverid();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getStartdate();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getEnddate()
=======
    );
  }
  f = message.getEnddate();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(14, f)
  }
}
=======
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 vehicleId = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.getVehicleid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.TripsRequest.prototype.setVehicleid = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.TripsRequest.prototype.getVehicleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.TripsRequest.prototype.setVehicleid = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional uint32 driverId = 11;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.getDriverid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0))
}

/** @param {number} value */
proto.beba_backend.TripsRequest.prototype.setDriverid = function (value) {
  jspb.Message.setProto3IntField(this, 11, value)
}
=======
proto.beba_backend.TripsRequest.prototype.getDriverid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.beba_backend.TripsRequest.prototype.setDriverid = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp startDate = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.getStartdate = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    12
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.TripsRequest.prototype.setStartdate = function (value) {
  jspb.Message.setWrapperField(this, 12, value)
}

proto.beba_backend.TripsRequest.prototype.clearStartdate = function () {
  this.setStartdate(undefined)
}
=======
proto.beba_backend.TripsRequest.prototype.getStartdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.TripsRequest.prototype.setStartdate = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.beba_backend.TripsRequest.prototype.clearStartdate = function() {
  this.setStartdate(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.hasStartdate = function () {
  return jspb.Message.getField(this, 12) != null
}
=======
proto.beba_backend.TripsRequest.prototype.hasStartdate = function() {
  return jspb.Message.getField(this, 12) != null;
};

>>>>>>> triage2

/**
 * optional google.protobuf.Timestamp endDate = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.getEnddate = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    13
  ))
}

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.TripsRequest.prototype.setEnddate = function (value) {
  jspb.Message.setWrapperField(this, 13, value)
}

proto.beba_backend.TripsRequest.prototype.clearEnddate = function () {
  this.setEnddate(undefined)
}
=======
proto.beba_backend.TripsRequest.prototype.getEnddate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.beba_backend.TripsRequest.prototype.setEnddate = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.beba_backend.TripsRequest.prototype.clearEnddate = function() {
  this.setEnddate(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.hasEnddate = function () {
  return jspb.Message.getField(this, 13) != null
}
=======
proto.beba_backend.TripsRequest.prototype.hasEnddate = function() {
  return jspb.Message.getField(this, 13) != null;
};

>>>>>>> triage2

/**
 * optional string status = 14;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TripsRequest.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''))
}

/** @param {string} value */
proto.beba_backend.TripsRequest.prototype.setStatus = function (value) {
  jspb.Message.setProto3StringField(this, 14, value)
}
=======
proto.beba_backend.TripsRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.beba_backend.TripsRequest.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.RecordId = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.RecordId, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.RecordId.displayName = 'proto.beba_backend.RecordId'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.RecordId.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.RecordId.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.RecordId} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.RecordId.toObject = function (includeInstance, msg) {
  let f; var obj = {
        id: jspb.Message.getFieldWithDefault(msg, 10, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.RecordId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.RecordId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.RecordId.displayName = 'proto.beba_backend.RecordId';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.RecordId.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.RecordId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.RecordId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.RecordId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.RecordId}
 */
<<<<<<< HEAD
proto.beba_backend.RecordId.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.RecordId()
  return proto.beba_backend.RecordId.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.RecordId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.RecordId;
  return proto.beba_backend.RecordId.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.RecordId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.RecordId}
 */
<<<<<<< HEAD
proto.beba_backend.RecordId.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.RecordId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.RecordId.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.RecordId.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.RecordId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.RecordId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.RecordId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.RecordId.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getId()
  if (f !== 0) {
    writer.writeUint32(10, f)
  }
}
=======
proto.beba_backend.RecordId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional uint32 id = 10;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.RecordId.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0))
}

/** @param {number} value */
proto.beba_backend.RecordId.prototype.setId = function (value) {
  jspb.Message.setProto3IntField(this, 10, value)
}
=======
proto.beba_backend.RecordId.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.beba_backend.RecordId.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.WriteRecordResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.WriteRecordResponse.displayName =
    'proto.beba_backend.WriteRecordResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.WriteRecordResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.WriteRecordResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.WriteRecordResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.WriteRecordResponse.toObject = function (
    includeInstance,
    msg
  ) {
  let f; var obj = {
        status: jspb.Message.getFieldWithDefault(msg, 10, false),
        message: jspb.Message.getFieldWithDefault(msg, 11, ''),
        recordid: jspb.Message.getFieldWithDefault(msg, 12, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.WriteRecordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.WriteRecordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.WriteRecordResponse.displayName = 'proto.beba_backend.WriteRecordResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.WriteRecordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.WriteRecordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.WriteRecordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.WriteRecordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 10, false),
    message: jspb.Message.getFieldWithDefault(msg, 11, ""),
    recordid: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.WriteRecordResponse}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.WriteRecordResponse()
  return proto.beba_backend.WriteRecordResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.WriteRecordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.WriteRecordResponse;
  return proto.beba_backend.WriteRecordResponse.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.WriteRecordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.WriteRecordResponse}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setStatus(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setMessage(value)
        break
      case 12:
        var value = /** @type {number} */ (reader.readUint32())
        msg.setRecordid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.WriteRecordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecordid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.WriteRecordResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.WriteRecordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.WriteRecordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.WriteRecordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getStatus()
  if (f) {
    writer.writeBool(10, f)
  }
  f = message.getMessage()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
  f = message.getRecordid()
  if (f !== 0) {
    writer.writeUint32(12, f)
  }
}
=======
proto.beba_backend.WriteRecordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRecordid();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional bool status = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.prototype.getStatus = function () {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(
    this,
    10,
    false
  ))
}

/** @param {boolean} value */
proto.beba_backend.WriteRecordResponse.prototype.setStatus = function (value) {
  jspb.Message.setProto3BooleanField(this, 10, value)
}
=======
proto.beba_backend.WriteRecordResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.beba_backend.WriteRecordResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional string message = 11;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/** @param {string} value */
proto.beba_backend.WriteRecordResponse.prototype.setMessage = function (value) {
  jspb.Message.setProto3StringField(this, 11, value)
}
=======
proto.beba_backend.WriteRecordResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.beba_backend.WriteRecordResponse.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};

>>>>>>> triage2

/**
 * optional uint32 recordId = 12;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.WriteRecordResponse.prototype.getRecordid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0))
}

/** @param {number} value */
proto.beba_backend.WriteRecordResponse.prototype.setRecordid = function (
  value
) {
  jspb.Message.setProto3IntField(this, 12, value)
}
=======
proto.beba_backend.WriteRecordResponse.prototype.getRecordid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.beba_backend.WriteRecordResponse.prototype.setRecordid = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.TextMessage, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TextMessage.displayName = 'proto.beba_backend.TextMessage'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.TextMessage.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.TextMessage.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.TextMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.TextMessage.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        messageid: jspb.Message.getFieldWithDefault(msg, 10, ''),
        recepient:
          (f = msg.getRecepient()) &&
          proto.beba_backend.Driver.toObject(includeInstance, f),
        text: jspb.Message.getFieldWithDefault(msg, 12, ''),
        timesent: jspb.Message.getFieldWithDefault(msg, 13, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.TextMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.TextMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.TextMessage.displayName = 'proto.beba_backend.TextMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.TextMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.TextMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.TextMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.TextMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    recepient: (f = msg.getRecepient()) && proto.beba_backend.Driver.toObject(includeInstance, f),
    text: jspb.Message.getFieldWithDefault(msg, 12, ""),
    timesent: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.TextMessage}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.TextMessage()
  return proto.beba_backend.TextMessage.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.TextMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.TextMessage;
  return proto.beba_backend.TextMessage.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.TextMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.TextMessage}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setMessageid(value)
        break
      case 11:
        var value = new proto.beba_backend.Driver()
        reader.readMessage(
          value,
          proto.beba_backend.Driver.deserializeBinaryFromReader
        )
        msg.setRecepient(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setText(value)
        break
      case 13:
        var value = /** @type {string} */ (reader.readString())
        msg.setTimesent(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.TextMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 11:
      var value = new proto.beba_backend.Driver;
      reader.readMessage(value,proto.beba_backend.Driver.deserializeBinaryFromReader);
      msg.setRecepient(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimesent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.TextMessage.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.TextMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.TextMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.TextMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getMessageid()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = message.getRecepient()
=======
proto.beba_backend.TextMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRecepient();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.beba_backend.Driver.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getText()
  if (f.length > 0) {
    writer.writeString(12, f)
  }
  f = message.getTimesent()
  if (f.length > 0) {
    writer.writeString(13, f)
  }
}
=======
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTimesent();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional string messageId = 10;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.getMessageid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setMessageid = function (value) {
  jspb.Message.setProto3StringField(this, 10, value)
}
=======
proto.beba_backend.TextMessage.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setMessageid = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional Driver recepient = 11;
 * @return {?proto.beba_backend.Driver}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.getRecepient = function () {
  return /** @type{?proto.beba_backend.Driver} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Driver,
    11
  ))
}

/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.TextMessage.prototype.setRecepient = function (value) {
  jspb.Message.setWrapperField(this, 11, value)
}

proto.beba_backend.TextMessage.prototype.clearRecepient = function () {
  this.setRecepient(undefined)
}
=======
proto.beba_backend.TextMessage.prototype.getRecepient = function() {
  return /** @type{?proto.beba_backend.Driver} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Driver, 11));
};


/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.TextMessage.prototype.setRecepient = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.beba_backend.TextMessage.prototype.clearRecepient = function() {
  this.setRecepient(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.hasRecepient = function () {
  return jspb.Message.getField(this, 11) != null
}
=======
proto.beba_backend.TextMessage.prototype.hasRecepient = function() {
  return jspb.Message.getField(this, 11) != null;
};

>>>>>>> triage2

/**
 * optional string text = 12;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setText = function (value) {
  jspb.Message.setProto3StringField(this, 12, value)
}
=======
proto.beba_backend.TextMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};

>>>>>>> triage2

/**
 * optional string timeSent = 13;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.TextMessage.prototype.getTimesent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''))
}

/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setTimesent = function (value) {
  jspb.Message.setProto3StringField(this, 13, value)
}
=======
proto.beba_backend.TextMessage.prototype.getTimesent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.beba_backend.TextMessage.prototype.setTimesent = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.SendMessageResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.SendMessageResponse.displayName =
    'proto.beba_backend.SendMessageResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.SendMessageResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.SendMessageResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.SendMessageResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.SendMessageResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        messageid: jspb.Message.getFieldWithDefault(msg, 10, ''),
        status: jspb.Message.getFieldWithDefault(msg, 11, false),
        message: jspb.Message.getFieldWithDefault(msg, 12, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.SendMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.SendMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.SendMessageResponse.displayName = 'proto.beba_backend.SendMessageResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.SendMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.SendMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.SendMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    status: jspb.Message.getFieldWithDefault(msg, 11, false),
    message: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.SendMessageResponse}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.SendMessageResponse()
  return proto.beba_backend.SendMessageResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.SendMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.SendMessageResponse;
  return proto.beba_backend.SendMessageResponse.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.SendMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.SendMessageResponse}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setMessageid(value)
        break
      case 11:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setStatus(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setMessage(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.SendMessageResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.SendMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.SendMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.SendMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getMessageid()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = message.getStatus()
  if (f) {
    writer.writeBool(11, f)
  }
  f = message.getMessage()
  if (f.length > 0) {
    writer.writeString(12, f)
  }
}
=======
proto.beba_backend.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional string messageId = 10;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.prototype.getMessageid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/** @param {string} value */
proto.beba_backend.SendMessageResponse.prototype.setMessageid = function (
  value
) {
  jspb.Message.setProto3StringField(this, 10, value)
}
=======
proto.beba_backend.SendMessageResponse.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.beba_backend.SendMessageResponse.prototype.setMessageid = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional bool status = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.prototype.getStatus = function () {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(
    this,
    11,
    false
  ))
}

/** @param {boolean} value */
proto.beba_backend.SendMessageResponse.prototype.setStatus = function (value) {
  jspb.Message.setProto3BooleanField(this, 11, value)
}
=======
proto.beba_backend.SendMessageResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.beba_backend.SendMessageResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};

>>>>>>> triage2

/**
 * optional string message = 12;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.SendMessageResponse.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/** @param {string} value */
proto.beba_backend.SendMessageResponse.prototype.setMessage = function (value) {
  jspb.Message.setProto3StringField(this, 12, value)
}
=======
proto.beba_backend.SendMessageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.beba_backend.SendMessageResponse.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.DisburseFundsRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DisburseFundsRequest.displayName =
    'proto.beba_backend.DisburseFundsRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.DisburseFundsRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.DisburseFundsRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.DisburseFundsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.DisburseFundsRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        driver:
          (f = msg.getDriver()) &&
          proto.beba_backend.Driver.toObject(includeInstance, f),
        amount: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.DisburseFundsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.DisburseFundsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DisburseFundsRequest.displayName = 'proto.beba_backend.DisburseFundsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.DisburseFundsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.DisburseFundsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.DisburseFundsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.DisburseFundsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    driver: (f = msg.getDriver()) && proto.beba_backend.Driver.toObject(includeInstance, f),
    amount: +jspb.Message.getFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.DisburseFundsRequest}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.DisburseFundsRequest()
  return proto.beba_backend.DisburseFundsRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.DisburseFundsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.DisburseFundsRequest;
  return proto.beba_backend.DisburseFundsRequest.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.DisburseFundsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.DisburseFundsRequest}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = new proto.beba_backend.Driver()
        reader.readMessage(
          value,
          proto.beba_backend.Driver.deserializeBinaryFromReader
        )
        msg.setDriver(value)
        break
      case 11:
        var value = /** @type {number} */ (reader.readDouble())
        msg.setAmount(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.DisburseFundsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.beba_backend.Driver;
      reader.readMessage(value,proto.beba_backend.Driver.deserializeBinaryFromReader);
      msg.setDriver(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.DisburseFundsRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.DisburseFundsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.DisburseFundsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.DisburseFundsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getDriver()
=======
proto.beba_backend.DisburseFundsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDriver();
>>>>>>> triage2
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.beba_backend.Driver.serializeBinaryToWriter
<<<<<<< HEAD
    )
  }
  f = message.getAmount()
  if (f !== 0.0) {
    writer.writeDouble(11, f)
  }
}
=======
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional Driver driver = 10;
 * @return {?proto.beba_backend.Driver}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.prototype.getDriver = function () {
  return /** @type{?proto.beba_backend.Driver} */ (jspb.Message.getWrapperField(
    this,
    proto.beba_backend.Driver,
    10
  ))
}

/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.DisburseFundsRequest.prototype.setDriver = function (value) {
  jspb.Message.setWrapperField(this, 10, value)
}

proto.beba_backend.DisburseFundsRequest.prototype.clearDriver = function () {
  this.setDriver(undefined)
}
=======
proto.beba_backend.DisburseFundsRequest.prototype.getDriver = function() {
  return /** @type{?proto.beba_backend.Driver} */ (
    jspb.Message.getWrapperField(this, proto.beba_backend.Driver, 10));
};


/** @param {?proto.beba_backend.Driver|undefined} value */
proto.beba_backend.DisburseFundsRequest.prototype.setDriver = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.beba_backend.DisburseFundsRequest.prototype.clearDriver = function() {
  this.setDriver(undefined);
};

>>>>>>> triage2

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.prototype.hasDriver = function () {
  return jspb.Message.getField(this, 10) != null
}
=======
proto.beba_backend.DisburseFundsRequest.prototype.hasDriver = function() {
  return jspb.Message.getField(this, 10) != null;
};

>>>>>>> triage2

/**
 * optional double amount = 11;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsRequest.prototype.getAmount = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(
    this,
    11,
    0.0
  ))
}

/** @param {number} value */
proto.beba_backend.DisburseFundsRequest.prototype.setAmount = function (value) {
  jspb.Message.setProto3FloatField(this, 11, value)
}
=======
proto.beba_backend.DisburseFundsRequest.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.beba_backend.DisburseFundsRequest.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.DisburseFundsResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DisburseFundsResponse.displayName =
    'proto.beba_backend.DisburseFundsResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.DisburseFundsResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.DisburseFundsResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.DisburseFundsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.DisburseFundsResponse.toObject = function (
    includeInstance,
    msg
  ) {
  let f; var obj = {
        status: jspb.Message.getFieldWithDefault(msg, 10, false),
        message: jspb.Message.getFieldWithDefault(msg, 11, ''),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.DisburseFundsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.DisburseFundsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.DisburseFundsResponse.displayName = 'proto.beba_backend.DisburseFundsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.DisburseFundsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.DisburseFundsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.DisburseFundsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.DisburseFundsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 10, false),
    message: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.DisburseFundsResponse}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.DisburseFundsResponse()
  return proto.beba_backend.DisburseFundsResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}
=======
proto.beba_backend.DisburseFundsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.DisburseFundsResponse;
  return proto.beba_backend.DisburseFundsResponse.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.DisburseFundsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.DisburseFundsResponse}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 10:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setStatus(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setMessage(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.DisburseFundsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.DisburseFundsResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.DisburseFundsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.DisburseFundsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.DisburseFundsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getStatus()
  if (f) {
    writer.writeBool(10, f)
  }
  f = message.getMessage()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
}
=======
proto.beba_backend.DisburseFundsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional bool status = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.prototype.getStatus = function () {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(
    this,
    10,
    false
  ))
}

/** @param {boolean} value */
proto.beba_backend.DisburseFundsResponse.prototype.setStatus = function (
  value
) {
  jspb.Message.setProto3BooleanField(this, 10, value)
}
=======
proto.beba_backend.DisburseFundsResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.beba_backend.DisburseFundsResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};

>>>>>>> triage2

/**
 * optional string message = 11;
 * @return {string}
 */
<<<<<<< HEAD
proto.beba_backend.DisburseFundsResponse.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/** @param {string} value */
proto.beba_backend.DisburseFundsResponse.prototype.setMessage = function (
  value
) {
  jspb.Message.setProto3StringField(this, 11, value)
}
=======
proto.beba_backend.DisburseFundsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.beba_backend.DisburseFundsResponse.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


>>>>>>> triage2

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
<<<<<<< HEAD
proto.beba_backend.Location = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.beba_backend.Location, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Location.displayName = 'proto.beba_backend.Location'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.beba_backend.Location.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.beba_backend.Location.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.beba_backend.Location} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.beba_backend.Location.toObject = function (includeInstance, msg) {
  let f; var obj = {
        lat: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
        pb_long: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

=======
proto.beba_backend.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.beba_backend.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.beba_backend.Location.displayName = 'proto.beba_backend.Location';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.beba_backend.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.beba_backend.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.beba_backend.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.beba_backend.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    pb_long: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


>>>>>>> triage2
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.beba_backend.Location}
 */
<<<<<<< HEAD
proto.beba_backend.Location.deserializeBinary = function (bytes) {
  let reader = new jspb.BinaryReader(bytes)
  let msg = new proto.beba_backend.Location()
  return proto.beba_backend.Location.deserializeBinaryFromReader(msg, reader)
}
=======
proto.beba_backend.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.beba_backend.Location;
  return proto.beba_backend.Location.deserializeBinaryFromReader(msg, reader);
};

>>>>>>> triage2

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.beba_backend.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.beba_backend.Location}
 */
<<<<<<< HEAD
proto.beba_backend.Location.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    let field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readDouble())
        msg.setLat(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readDouble())
        msg.setLong(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}
=======
proto.beba_backend.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLong(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};

>>>>>>> triage2

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
<<<<<<< HEAD
proto.beba_backend.Location.prototype.serializeBinary = function () {
  let writer = new jspb.BinaryWriter()
  proto.beba_backend.Location.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}
=======
proto.beba_backend.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.beba_backend.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

>>>>>>> triage2

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.beba_backend.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
<<<<<<< HEAD
proto.beba_backend.Location.serializeBinaryToWriter = function (
  message,
  writer
) {
  let f = undefined
  f = message.getLat()
  if (f !== 0.0) {
    writer.writeDouble(1, f)
  }
  f = message.getLong()
  if (f !== 0.0) {
    writer.writeDouble(2, f)
  }
}
=======
proto.beba_backend.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLong();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};

>>>>>>> triage2

/**
 * optional double lat = 1;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Location.prototype.getLat = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0))
}

/** @param {number} value */
proto.beba_backend.Location.prototype.setLat = function (value) {
  jspb.Message.setProto3FloatField(this, 1, value)
}
=======
proto.beba_backend.Location.prototype.getLat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.beba_backend.Location.prototype.setLat = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};

>>>>>>> triage2

/**
 * optional double long = 2;
 * @return {number}
 */
<<<<<<< HEAD
proto.beba_backend.Location.prototype.getLong = function () {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0))
}

/** @param {number} value */
proto.beba_backend.Location.prototype.setLong = function (value) {
  jspb.Message.setProto3FloatField(this, 2, value)
}

goog.object.extend(exports, proto.beba_backend)
=======
proto.beba_backend.Location.prototype.getLong = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.beba_backend.Location.prototype.setLong = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.beba_backend);
>>>>>>> triage2
